version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_DOCKER://kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_DOCKER://0.0.0.0:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_DOCKER
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      retries: 10
      start_period: 10s

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: my-daily-track
      MYSQL_ROOT_PASSWORD: admin
    ports:
      - "3309:3306"

  spring-boot-app:
    image: karol8650/my-daily-track-backend:v1.1
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/my-daily-track
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9093
    depends_on:
      - mysql
      - kafka
    restart: always
    ports:
      - "8080:8080"

  redis:
    image: "redis"
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093
      - REDIS=redis

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus

  kafka-exporter:
    image: danielqsj/kafka-exporter
    ports:
      - "9308:9308"
    command: ["--kafka.server=kafka:9093"]
    depends_on:
      - kafka
    restart: on-failure


volumes:
  grafana-storage:
